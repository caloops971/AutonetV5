{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "vehicle_id"
      },
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "customDetails",
        "module": "dbupdater",
        "action": "custom",
        "options": {
          "connection": "autonetDB",
          "sql": {
            "query": "SELECT vd.id AS 'VehicleID',vd.Brand, vd.Model, vd.Tarif,  vd.Lieu,  vd.cm3, vd.Puissance, vd.Energie, vd.Type_de_vehicule, vd.Transmission, vd.Carrosserie, vd.Couleur, vd.Couleur_exterieure, vd.Consommation_urbaine_1, vd.Consommation_extra_urbaine_1, vd.Emissions_de_CO2_1,\nvd.Equipements_principaux,vd.Equipements,\nMIN(ROUND(((vd.Tarif + si.price + se.price) + (vd.Tarif + si.price + se.price) * (ti.OM + ti.OMR + ti.TVA) / 100) * 1.15, 0)) AS 'LowestPrice'\nFROM vehicle_data vd\nJOIN Shipping_int si ON vd.Lieu = si.`from`\nJOIN Shipping_ext se ON si.`to` = se.`from`\nJOIN tax_import ti ON vd.cm3 BETWEEN ti.cy_min AND ti.cy_max\nWHERE ti.territoire = 'PTP' AND vd.id = @vehicle_id\nGROUP BY vd.id;\n",
            "params": [
              {
                "name": "@vehicle_id",
                "value": "{{$_GET.vehicle_id}}",
                "test": "1"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "VehicleID",
            "type": "number"
          },
          {
            "name": "Brand",
            "type": "text"
          },
          {
            "name": "Model",
            "type": "text"
          },
          {
            "name": "Tarif",
            "type": "number"
          },
          {
            "name": "Lieu",
            "type": "text"
          },
          {
            "name": "cm3",
            "type": "number"
          },
          {
            "name": "Puissance",
            "type": "text"
          },
          {
            "name": "Energie",
            "type": "text"
          },
          {
            "name": "Type_de_vehicule",
            "type": "text"
          },
          {
            "name": "Transmission",
            "type": "text"
          },
          {
            "name": "Carrosserie",
            "type": "text"
          },
          {
            "name": "Couleur",
            "type": "text"
          },
          {
            "name": "Couleur_exterieure",
            "type": "text"
          },
          {
            "name": "Consommation_urbaine_1",
            "type": "text"
          },
          {
            "name": "Consommation_extra_urbaine_1",
            "type": "text"
          },
          {
            "name": "Emissions_de_CO2_1",
            "type": "text"
          },
          {
            "name": "Equipements_principaux",
            "type": "file"
          },
          {
            "name": "Equipements",
            "type": "file"
          },
          {
            "name": "LowestPrice",
            "type": "number"
          }
        ]
      },
      {
        "name": "VehicleImage",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "autonetDB",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "vehicle_img",
                "column": "id"
              },
              {
                "table": "vehicle_img",
                "column": "img"
              },
              {
                "table": "vehicle_img",
                "column": "img_nav"
              }
            ],
            "table": {
              "name": "vehicle_img"
            },
            "primary": "id",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "vehicle_img.vehicle_id",
                  "field": "vehicle_img.vehicle_id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{$_GET.vehicle_id}}",
                  "data": {
                    "table": "vehicle_img",
                    "column": "vehicle_id",
                    "type": "number",
                    "columnObj": {
                      "type": "integer",
                      "primary": false,
                      "nullable": true,
                      "name": "vehicle_id"
                    }
                  },
                  "operation": "=",
                  "table": "vehicle_img"
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT id, img, img_nav\nFROM vehicle_img\nWHERE vehicle_id = :P1 /* {{$_GET.vehicle_id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.vehicle_id}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "img"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "A",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{customDetails[0].Equipements_principaux.replace('\\'', '\"')}}"
        },
        "meta": [],
        "outputType": "text",
        "output": false
      },
      {
        "name": "Equipements_principaux",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{A.parseJSON()}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true
      },
      {
        "name": "Equipments",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{customDetails[0].Equipements.parseJSON()}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true
      },
      {
        "name": "C",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{B.replace('\\'', '\"')}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true,
        "disabled": true
      },
      {
        "name": "Equipements",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{C.parseJSON()}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true,
        "disabled": true
      }
    ]
  }
}